{"title":"SQL-查询","slug":"SQL-查询","date":"2020-04-18T09:49:11.000Z","updated":"2020-04-18T10:31:18.622Z","comments":true,"path":"api/articles/SQL-查询.json","excerpt":null,"covers":null,"content":"<!-- build time:Sat Apr 18 2020 18:42:09 GMT+0800 (GMT+08:00) --><h1 id=\"数据库表查询操作\"><a class=\"markdownIt-Anchor\" href=\"#数据库表查询操作\"></a> 数据库表查询操作</h1><h2 id=\"查询数据表\"><a class=\"markdownIt-Anchor\" href=\"#查询数据表\"></a> 查询数据表</h2><p>SELECT 语句来查询数据。查询数据是指从数据库中根据需求，使用不同的查询方式来获取不同的数据，是使用频率最高、最重要的操作。</p><blockquote><p>语法格式如下：<br><code>SELECT {* | &lt;字段列名&gt;} [ FROM &lt;表 1&gt;, &lt;表 2&gt;… [WHERE &lt;表达式&gt; [GROUP BY &lt;group by definition&gt; [HAVING &lt;expression&gt; [{&lt;operator&gt; &lt;expression&gt;}…]] [ORDER BY &lt;order by definition&gt;] [LIMIT[&lt;offset&gt;,] &lt;row count&gt;] ]</code></p></blockquote><p>其中，各条子句说明如下：</p><ul><li>{*|&lt;字段列名&gt;}包含星号通配符的字段列表，表示所要查询字段的名称。</li><li>&lt;表1&gt;，&lt;表2&gt;…，表1和表2表示查询数据的来源，可以是单个或多个。</li><li><strong>WHERE</strong>&lt;表达式&gt;是可选项，如果选择该项，将限定查询数据必须满足该查询条件。</li><li><strong>GROUP BY</strong>&lt;字段&gt;，该子句告诉数据库如何显示查询出来的数据，并按照指定的字段分组。</li><li><strong>ORDER BY</strong>&lt; 字段 &gt;]，按什么样的顺序显示查询出来的数据，可以进行的排序有升序（ASC）和降序（DESC），默认情况下是升序。</li><li><strong><code>[LIMIT[&lt;offset&gt;，]&lt;row count&gt;]</code></strong>，该子句告诉 MySQL 每次显示查询出来的数据条数。</li></ul><h3 id=\"查询表中所有字段\"><a class=\"markdownIt-Anchor\" href=\"#查询表中所有字段\"></a> 查询表中所有字段</h3><p><strong>1.</strong> 使用&quot;*&quot;查询表的所有字段</p><blockquote><p>语法格式如下：SELECT * FROM 表名;</p></blockquote><p><strong>2.</strong> 列出表的所有字段<br><strong>SELECT</strong>关键字后面的字段名为需要查找的字段，可以使用 DESC 命令查看表的结构。</p><h3 id=\"查询表中指定的字段\"><a class=\"markdownIt-Anchor\" href=\"#查询表中指定的字段\"></a> 查询表中指定的字段</h3><p>查询表中的某一个字段的语法格式为：</p><blockquote><p>SELECT &lt; 列名 &gt; FROM &lt; 表名 &gt;;</p></blockquote><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SELECT name FROM tb_students_info;</span><br><span class=\"line\">+<span class=\"comment\">--------+</span></span><br><span class=\"line\">| name   |</span><br><span class=\"line\">+<span class=\"comment\">--------+</span></span><br><span class=\"line\">| Dany   |</span><br><span class=\"line\">| Thomas |</span><br><span class=\"line\">| Tom    |</span><br><span class=\"line\">+<span class=\"comment\">--------+</span></span><br><span class=\"line\">10 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id=\"去重过滤重复数据\"><a class=\"markdownIt-Anchor\" href=\"#去重过滤重复数据\"></a> 去重(过滤重复数据)</h2><p>使用<strong>DISTINCT</strong>关键字指示 数据库消除重复的记录值。</p><blockquote><p>语法格式为：SELECT DISTINCT &lt;字段名&gt; FROM &lt;表名&gt;;</p></blockquote><h2 id=\"设置别名\"><a class=\"markdownIt-Anchor\" href=\"#设置别名\"></a> 设置别名</h2><p>当数据表名很长或者执行一些特殊查询的时候，为了方便操作，可以为表指定一个别名，</p><blockquote><p>语法格式为：&lt;表名&gt; [AS] &lt;别名&gt;</p></blockquote><p>使用示例如下：</p><!-- rebuild by neat -->","more":"<!-- build time:Sat Apr 18 2020 18:42:09 GMT+0800 (GMT+08:00) --><h1 id=\"数据库表查询操作\"><a class=\"markdownIt-Anchor\" href=\"#数据库表查询操作\"></a> 数据库表查询操作</h1><h2 id=\"查询数据表\"><a class=\"markdownIt-Anchor\" href=\"#查询数据表\"></a> 查询数据表</h2><p>SELECT 语句来查询数据。查询数据是指从数据库中根据需求，使用不同的查询方式来获取不同的数据，是使用频率最高、最重要的操作。</p><blockquote><p>语法格式如下：<br><code>SELECT {* | &lt;字段列名&gt;} [ FROM &lt;表 1&gt;, &lt;表 2&gt;… [WHERE &lt;表达式&gt; [GROUP BY &lt;group by definition&gt; [HAVING &lt;expression&gt; [{&lt;operator&gt; &lt;expression&gt;}…]] [ORDER BY &lt;order by definition&gt;] [LIMIT[&lt;offset&gt;,] &lt;row count&gt;] ]</code></p></blockquote><p>其中，各条子句说明如下：</p><ul><li>{*|&lt;字段列名&gt;}包含星号通配符的字段列表，表示所要查询字段的名称。</li><li>&lt;表1&gt;，&lt;表2&gt;…，表1和表2表示查询数据的来源，可以是单个或多个。</li><li><strong>WHERE</strong>&lt;表达式&gt;是可选项，如果选择该项，将限定查询数据必须满足该查询条件。</li><li><strong>GROUP BY</strong>&lt;字段&gt;，该子句告诉数据库如何显示查询出来的数据，并按照指定的字段分组。</li><li><strong>ORDER BY</strong>&lt; 字段 &gt;]，按什么样的顺序显示查询出来的数据，可以进行的排序有升序（ASC）和降序（DESC），默认情况下是升序。</li><li><strong><code>[LIMIT[&lt;offset&gt;，]&lt;row count&gt;]</code></strong>，该子句告诉 MySQL 每次显示查询出来的数据条数。</li></ul><h3 id=\"查询表中所有字段\"><a class=\"markdownIt-Anchor\" href=\"#查询表中所有字段\"></a> 查询表中所有字段</h3><p><strong>1.</strong> 使用&quot;*&quot;查询表的所有字段</p><blockquote><p>语法格式如下：SELECT * FROM 表名;</p></blockquote><p><strong>2.</strong> 列出表的所有字段<br><strong>SELECT</strong>关键字后面的字段名为需要查找的字段，可以使用 DESC 命令查看表的结构。</p><h3 id=\"查询表中指定的字段\"><a class=\"markdownIt-Anchor\" href=\"#查询表中指定的字段\"></a> 查询表中指定的字段</h3><p>查询表中的某一个字段的语法格式为：</p><blockquote><p>SELECT &lt; 列名 &gt; FROM &lt; 表名 &gt;;</p></blockquote><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SELECT name FROM tb_students_info;</span><br><span class=\"line\">+<span class=\"comment\">--------+</span></span><br><span class=\"line\">| name   |</span><br><span class=\"line\">+<span class=\"comment\">--------+</span></span><br><span class=\"line\">| Dany   |</span><br><span class=\"line\">| Thomas |</span><br><span class=\"line\">| Tom    |</span><br><span class=\"line\">+<span class=\"comment\">--------+</span></span><br><span class=\"line\">10 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id=\"去重过滤重复数据\"><a class=\"markdownIt-Anchor\" href=\"#去重过滤重复数据\"></a> 去重(过滤重复数据)</h2><p>使用<strong>DISTINCT</strong>关键字指示 数据库消除重复的记录值。</p><blockquote><p>语法格式为：SELECT DISTINCT &lt;字段名&gt; FROM &lt;表名&gt;;</p></blockquote><h2 id=\"设置别名\"><a class=\"markdownIt-Anchor\" href=\"#设置别名\"></a> 设置别名</h2><p>当数据表名很长或者执行一些特殊查询的时候，为了方便操作，可以为表指定一个别名，</p><blockquote><p>语法格式为：&lt;表名&gt; [AS] &lt;别名&gt;</p></blockquote><p>使用示例如下：</p><!-- rebuild by neat -->","categories":[{"name":"计算机基础","path":"api/categories/计算机基础.json"}],"tags":[{"name":"SQL","path":"api/tags/SQL.json"},{"name":"数据库","path":"api/tags/数据库.json"}]}