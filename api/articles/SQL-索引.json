{"title":"SQL-索引","slug":"SQL-索引","date":"2020-04-16T12:02:11.000Z","updated":"2020-04-22T06:57:36.270Z","comments":true,"path":"api/articles/SQL-索引.json","excerpt":null,"covers":null,"content":"<!-- build time:Fri Apr 24 2020 15:58:16 GMT+0800 (GMT+08:00) --><h1 id=\"索引简介\"><a class=\"markdownIt-Anchor\" href=\"#索引简介\"></a> 索引简介</h1><p>索引是 MySQL 中一种十分重要的数据库对象。它是数据库性能调优技术的基础，常用于实现数据的快速检索。索引就是根据表中的一列或若干列按照一定顺序建立的列值与记录行之间的对应关系表，实质上是一张描述索引列的列值与原表中记录行之间一一对应关系的有序表。</p><p><strong>1.顺序访问</strong></p><p>顺序访问是在表中实行全表扫描，从头到尾逐行遍历，直到在无序的行数据中找到符合条件的目标数据。这种方式实现比较简单，但是当表中有大量数据的时候，效率非常低下。例如，在几千万条数据中查找少量的数据时，使用顺序访问方式将会遍历所有的数据，花费大量的时间，显然会影响数据库的处理性能。</p><p><strong>2.索引访问</strong></p><p>索引访问是通过遍历索引来直接访问表中记录行的方式。使用这种方式的前提是对表建立一个索引，在列上创建了索引之后，查找数据时可以直接根据该列上的索引找到对应记录行的位置，从而快捷地查找到数据。索引存储了指定列数据值的指针，根据指定的排序顺序对这些指针排序。</p><h2 id=\"索引的分类\"><a class=\"markdownIt-Anchor\" href=\"#索引的分类\"></a> 索引的分类</h2><p>索引的类型和存储引擎有关，每种存储引擎所支持的索引类型不一定完全相同。根据存储方式的不同，MySQL中常用的索引在物理上分为以下两类。</p><p><strong>B-树索引</strong></p><p>B-树索引又称为 BTREE 索引，目前大部分的索引都是采用 B-树索引来存储的。B-树索引是一个典型的数据结构，其包含的组件主要有以下几个：</p><ul><li>叶子节点：包含的条目直接指向表里的数据行。叶子节点之间彼此相连，一个叶子节点有一个指向下一个叶子节点的指针。</li><li>分支节点：包含的条目指向索引里其他的分支节点或者叶子节点。</li><li>根节点：一个 B-树索引只有一个根节点，实际上就是位于树的最顶端的分支节点。</li></ul><p>表中的每一行都会在索引上有一个对应值。因此，在表中进行数据查询时，可以根据索引值一步一步定位到数据所在的行。B-树索引可以进行全键值、键值范围和键值前缀查询，也可以对查询结果进行 ORDER BY排序。但B-树索引必须遵循左边前缀原则，要考虑以下几点约束：</p><ul><li>查询必须从索引的最左边的列开始。</li><li>查询不能跳过某一索引列，必须按照从左到右的顺序进行匹配。</li><li>存储引擎不能使用索引中范围条件右边的列。</li></ul><p><strong>哈希索引</strong></p><p>哈希通过散列算法变换成固定长度的输出，该输出就是散列值。哈希索引也称为散列索引或 HASH 索引。MySQL目前仅有MEMORY存储引擎和HEAP存储引擎支持这类索引。其中，MEMORY存储引擎可以支持B-树索引和HASH索引，且将HASH当成默认索引。</p><p>HASH 索引不是基于树形的数据结构查找数据，而是根据索引列对应的哈希值的方法获取表的记录行。哈希索引的最大特点是访问速度快，但也存在下面的一些缺点：</p><ul><li>需要读取表中索引列的值来参与散列计算，散列计算是一个比较耗时的操作。也就是说，相对于 B- 树索引来说，建立哈希索引会耗费更多的时间。</li><li>不能使用HASH索引排序</li><li>HASH 索引只支持等值比较，如“=”“IN()”或“&lt;=&gt;”</li><li>HASH索引不支持键的部分匹配，因为在计算HASH值的时候是通过整个索引值来计算的</li></ul><p>MySQL中的索引在逻辑上分为以下5 类：</p><ul><li><strong>普通索引</strong>：普通索引是最基本的索引类型，唯一任务是加快对数据的访问速度，没有任何限制。创建普通索引时，通常使用的关键字是INDEX或 KEY。</li><li><strong>唯一性索引</strong>：唯一性索引是不允许索引列具有相同索引值的索引。如果能确定某个数据列只包含彼此各不相同的值，在为这个数据列创建索引的时候就应该用关键字 UNIQUE 把它定义为一个唯一性索引。<font color=\"red\">创建唯一性索引的目的往往不是为了提高访问速度，而是为了避免数据出现重复。</font></li><li><strong>主键索引</strong>：主键索引是一种唯一性索引，即不允许值重复或者值为空，并且每个表只能有一个主键。主键可以在创建表的时候指定，也可以通过修改表的方式添加，必须指定关键字 PRIMARY KEY。<font color=\"red\">每个表只能有一个主键</font></li><li><strong>空间索引</strong>：空间索引主要用于地理空间数据类型 GEOMETRY。</li><li><strong>全文索引</strong>：全文索引只能在 VARCHAR 或 TEXT 类型的列上创建，并且只能在 MyISAM 表中创建。索引在逻辑上分为以上 5 类，但在实际使用中，索引通常被创建成单列索引和组合索引。单列索引就是索引只包含原表的一个列；组合索引也称为复合索引或多列索引，相对于单列索引来说，组合索引是将原表的多个列共同组成一个索引。</li></ul><p>为了提高索引的应用性能，MySQL中的索引可以根据具体应用采用不同的索引策略。这些索引策略所对应的索引类型有聚集索引、次要索引、覆盖索引、复合索引、前缀索引、唯一索引等</p><h2 id=\"索引的使用原则和注意事项\"><a class=\"markdownIt-Anchor\" href=\"#索引的使用原则和注意事项\"></a> 索引的使用原则和注意事项</h2><p>虽然索引可以加快查询速度，提高 MySQL 的处理性能，但是过多地使用索引也会造成以下弊端：</p><ul><li>创建索引和维护索引要耗费时间，这种时间随着数据量的增加而增加。</li><li>除了数据表占数据空间之外，每一个索引还要占一定的物理空间。如果要建立聚簇索引，那么需要的空间就会更大。</li><li>当对表中的数据进行增加、删除和修改的时候，索引也要动态地维护，这样就降低了数据的维护速度。</li></ul><blockquote><p><font color=\"red\">索引可以在一些情况下加速查询，但是在某些情况下，会降低效率。</font></p></blockquote><p>索引只是提高效率的一个因素，因此在建立索引的时候应该遵循以下原则：</p><ul><li>在经常需要搜索的列上建立索引，可以加快搜索的速度。</li><li>在作为主键的列上创建索引，强制该列的唯一性，并组织表中数据的排列结构。</li><li>在经常使用表连接的列上创建索引，这些列主要是一些外键，可以加快表连接的速度。</li><li>在经常需要根据范围进行搜索的列上创建索引，因为索引已经排序，所以其指定的范围是连续的。</li><li>在经常需要排序的列上创建索引，因为索引已经排序，所以查询时可以利用索引的排序，加快排序查询</li><li>在经常使用WHERE子句的列上创建索引，加快条件的判断速度。</li></ul><p>在某些应用场合下建立索引不能提高 MySQL的工作效率，甚至降低了数据库的工作效率，一般来说不适合创建索引的环境如下：</p><ul><li>对于那些在查询中很少使用或参考的列不应该创建索引。因为这些列很少使用到，所以有索引或者无索引并不能提高查询速度。相反，由于增加了索引，反而降低了系统的维护速度，并增大了空间要求。</li><li>对于那些只有很少数据值的列也不应该创建索引。因为这些列的取值很少，例如人事表的性别列。查询结果集的数据行占了表中数据行的很大比例，增加索引并不能明显加快检索速度。</li><li>对于那些定义为 TEXT、IMAGE 和 BIT 数据类型的列不应该创建索引。因为这些列的数据量要么相当大，要么取值很少。</li><li>当修改性能远远大于检索性能时，不应该创建索引。因为修改性能和检索性能是互相矛盾的。当创建索引时，会提高检索性能，降低修改性能。当减少索引时，会提高修改性能，降低检索性能。因此，当修改性能远远大于检索性能时，不应该创建索引。</li></ul><h1 id=\"创建索引create-index\"><a class=\"markdownIt-Anchor\" href=\"#创建索引create-index\"></a> 创建索引(CREATE INDEX)</h1><p>索引的建立对于数据库的高效运行是很重要的，索引可以大大提升SQL的检索速度。</p><h2 id=\"基本语法\"><a class=\"markdownIt-Anchor\" href=\"#基本语法\"></a> 基本语法</h2><p>MySQL提供三种创建索引的方法：</p><p><strong>1.使用CREATE INDEX语句</strong></p><p>使用专门用于创建索引的 CREATE INDEX 语句在一个已有的表上创建索引，但该语句不能创建主键。</p><blockquote><p>语法格式：CREATE &lt;索引名&gt; ON &lt;表名&gt; (&lt;列名&gt; [&lt;长度&gt;] [ ASC | DESC])</p></blockquote><p>语法说明：</p><ul><li>&lt;索引名&gt;：指定索引名。一个表可以创建多个索引，但每个索引在该表中的名称是唯一的.</li><li>&lt;表名&gt;：指定要创建索引的表名。</li><li>&lt;列名&gt;：指定要创建索引的列名。通常可以考虑将查询语句中在 JOIN 子句和 WHERE 子句里经常出现的列作为索引列。</li><li>&lt;列名&gt;：指定要创建索引的列名。通常可以考虑将查询语句中在 JOIN 子句和 WHERE 子句里经常出现的列作为索引列。</li><li>ASC|DESC：可选项。ASC指定索引按照升序来排列，DESC指定索引按照降序来排列，默认为ASC.</li></ul><p><strong>2.使用CREATE TABLE语句</strong></p><p>索引也可以在创建表（CREATE TABLE）的同时创建。在 CREATE TABLE 语句中添加以下语句。语法格式：</p><blockquote><p>CONSTRAINT PRIMARY KEY [索引类型] (&lt;列名&gt;,…)</p></blockquote><p>在CREATE TABLE 语句中添加此语句，表示在创建新表的同时创建该表的主键。</p><blockquote><p>语法格式1：KEY | INDEX [&lt;索引名&gt;] [&lt;索引类型&gt;] (&lt;列名&gt;,…)</p></blockquote><p>在 CREATE TABLE 语句中添加此语句，表示在创建新表的同时创建该表的索引。</p><blockquote><p>语法格式2：UNIQUE [ INDEX | KEY] [&lt;索引名&gt;] [&lt;索引类型&gt;] (&lt;列名&gt;,…)</p></blockquote><p>在 CREATE TABLE 语句中添加此语句，表示在创建新表的同时创建该表的唯一性索引。</p><blockquote><p>语法格式3：FOREIGN KEY &lt;索引名&gt; &lt;列名&gt;</p></blockquote><p>在 CREATE TABLE 语句中添加此语句，表示在创建新表的同时创建该表的外键。</p><p><strong>3.使用ALTER TABLE语句</strong></p><p>CREATE INDEX 语句可以在一个已有的表上创建索引，ALTER TABLE 语句也可以在一个已有的表上创建索引。在使用 ALTER TABLE 语句修改表的同时，可以向已有的表添加索引。具体的做法是在 ALTER TABLE 语句中添加以下语法成分的某一项或几项。</p><blockquote><p>语法格式1：ADD INDEX [&lt;索引名&gt;] [&lt;索引类型&gt;] (&lt;列名&gt;,…)</p></blockquote><p>在 ALTER TABLE 语句中添加此语法成分，表示在修改表的同时为该表添加索引。</p><blockquote><p>语法格式2：ADD PRIMARY KEY [&lt;索引类型&gt;] (&lt;列名&gt;,…)</p></blockquote><p>在 ALTER TABLE 语句中添加此语法成分，表示在修改表的同时为该表添加主键。</p><blockquote><p>语法格式3：ADD UNIQUE [ INDEX | KEY] [&lt;索引名&gt;] [&lt;索引类型&gt;] (&lt;列名&gt;,…)</p></blockquote><p>在 ALTER TABLE 语句中添加此语法成分，表示在修改表的同时为该表添加唯一性索引。</p><blockquote><p>语法格式4：ADD FOREIGN KEY [&lt;索引名&gt;] (&lt;列名&gt;,…)</p></blockquote><p>在 ALTER TABLE 语句中添加此语法成分，表示在修改表的同时为该表添加外键</p><h2 id=\"创建一般索引\"><a class=\"markdownIt-Anchor\" href=\"#创建一般索引\"></a> 创建一般索引</h2><p>实例1：创建一个表 tb_stu_info，在该表的 height 字段创建一般索引。输入的 SQL 语句和执行过程如下所示。</p><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; create table tb_stu_info</span><br><span class=\"line\">    -&gt; (</span><br><span class=\"line\">    -&gt; id INT NOT NULL,</span><br><span class=\"line\">    -&gt; nam CHAR(45) DEFAULT NULL,</span><br><span class=\"line\">    -&gt; dept_id INT DEFAULT NULL\\</span><br><span class=\"line\">    -&gt; ,age INT DEFAULT NULL,</span><br><span class=\"line\">    -&gt; height INT DEFAULT NULL,</span><br><span class=\"line\">    -&gt; INDEX(height)</span><br><span class=\"line\">    -&gt; );</span><br><span class=\"line\">Query OK, 0 rows affected (0.30 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; show create table tb_stu_info\\G</span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">       Table: tb_stu_info</span><br><span class=\"line\"><span class=\"keyword\">Create</span> <span class=\"keyword\">Table</span>: <span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`tb_stu_info`</span> (</span><br><span class=\"line\">  <span class=\"string\">`id`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`nam`</span> <span class=\"built_in\">char</span>(<span class=\"number\">45</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dept_id`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`age`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`height`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"keyword\">KEY</span> <span class=\"string\">`height`</span> (<span class=\"string\">`height`</span>)</span><br><span class=\"line\">) <span class=\"keyword\">ENGINE</span>=<span class=\"keyword\">InnoDB</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CHARSET</span>=utf8</span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"keyword\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id=\"创建唯一索引\"><a class=\"markdownIt-Anchor\" href=\"#创建唯一索引\"></a> 创建唯一索引</h2><p>实例2：创建一个表 tb_stu_info2，在该表的 id 字段上使用 UNIQUE 关键字创建唯一索引。</p><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CREATE TABLE tb_stu_info2</span><br><span class=\"line\">    -&gt; (</span><br><span class=\"line\">    -&gt; id INT NOT NULL,</span><br><span class=\"line\">    -&gt; name CHAR(45) DEFAULT NULL,</span><br><span class=\"line\">    -&gt; dept_id INT DEFAULT NULL,</span><br><span class=\"line\">    -&gt; age INT DEFAULT NULL,</span><br><span class=\"line\">    -&gt; height INT DEFAULT NULL,</span><br><span class=\"line\">    -&gt; UNIQUE INDEX(height)</span><br><span class=\"line\">    -&gt; );</span><br><span class=\"line\">Query OK, 0 rows affected (0.29 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; SHOW CREATE TABLE tb_stu_info2\\G</span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">       Table: tb_stu_info2</span><br><span class=\"line\"><span class=\"keyword\">Create</span> <span class=\"keyword\">Table</span>: <span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`tb_stu_info2`</span> (</span><br><span class=\"line\">  <span class=\"string\">`id`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`name`</span> <span class=\"built_in\">char</span>(<span class=\"number\">45</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dept_id`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`age`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`height`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"keyword\">UNIQUE</span> <span class=\"keyword\">KEY</span> <span class=\"string\">`height`</span> (<span class=\"string\">`height`</span>)</span><br><span class=\"line\">) <span class=\"keyword\">ENGINE</span>=<span class=\"keyword\">InnoDB</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CHARSET</span>=utf8</span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"keyword\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id=\"查看索引\"><a class=\"markdownIt-Anchor\" href=\"#查看索引\"></a> 查看索引</h2><p>查看已创建的索引的情况，可以使用 SHOW INDEX 语句查看表中创建的索引。</p><blockquote><p>语法格式：SHOW INDEX FROM &lt;表名&gt; [ FROM &lt;数据库名&gt;]</p></blockquote><p>语法说明：</p><ul><li>&lt;表名&gt;：要显示索引的表。</li><li>&lt;数据库名&gt;：要显示的表所在的数据库。</li></ul><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SHOW INDEX FROM course FROM mytest;</span><br><span class=\"line\"><span class=\"comment\"># 显示数据库mytest的表course的索引情况</span></span><br></pre></td></tr></table></figure><p>显示字段说明如下：</p><ul><li>Table：表的名称。</li><li>Non_unique：用于显示该索引是否是唯一索引。若不是唯一索引，则该列的值显示为 1；若是唯一索引，则该列的值显示为 0。</li><li>Key_name：索引的名称。</li><li>Seq_in_index：索引中的列序列号，从 1 开始计数。</li><li>Column_name：列名称。</li><li>Collation：显示列以何种顺序存储在索引中。在 MySQL 中，升序显示值“A”（升序），若显示为 NULL，则表示无分类。</li><li>Cardinality：显示索引中唯一值数目的估计值。基数根据被存储为整数的统计数据计数，所以即使对于小型表，该值也没有必要是精确的。基数越大，当进行联合时，MySQL 使用该索引的机会就越大。</li><li>Sub_part：若列只是被部分编入索引，则为被编入索引的字符的数目。若整列被编入索引，则为 NULL。</li><li>Packed：指示关键字如何被压缩。若没有被压缩，则为 NULL。<br>Null：用于显示索引列中是否包含 NULL。若列含有 NULL，则显示为 YES。若没有，则该列显示为 NO。</li><li>Index_type：显示索引使用的类型和方法（BTREE、FULLTEXT、HASH、RTREE）。<br>Comment：显示评注。</li></ul><p>实例：使用 SHOW INDEX 语句查看表 tb_stu_info2 的索引信息</p><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SHOW INDEX FROM tb_stu_info2\\G</span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">        Table: tb_stu_info2</span><br><span class=\"line\">   Non_unique: 0</span><br><span class=\"line\">     Key_name: height</span><br><span class=\"line\"> Seq_in_index: 1</span><br><span class=\"line\">  Column_name: height</span><br><span class=\"line\">    Collation: A</span><br><span class=\"line\">  Cardinality: 0</span><br><span class=\"line\">     Sub_part: NULL</span><br><span class=\"line\">       Packed: NULL</span><br><span class=\"line\">         Null: YES</span><br><span class=\"line\">   Index_type: BTREE</span><br><span class=\"line\">      <span class=\"keyword\">Comment</span>: </span><br><span class=\"line\">Index_comment: </span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"keyword\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id=\"修改和删除索引drop-index\"><a class=\"markdownIt-Anchor\" href=\"#修改和删除索引drop-index\"></a> 修改和删除索引(DROP INDEX)</h1><p>当不再需要索引时，可以使用 DROP INDEX 语句或 ALTER TABLE 语句来对索引进行删除。<br><strong>1.使用DROP INDEX语句</strong></p><blockquote><p>语法格式：DROP INDEX &lt;索引名&gt; ON &lt;表名&gt;</p></blockquote><p>语法说明：</p><ul><li>&lt;索引名&gt;：要删除的索引名</li><li>&lt;表名&gt;：指定该索引所在的表名</li></ul><p><strong>2.使用ALTER TABLE语句</strong><br>根据 ALTER TABLE 语句的语法可知，该语句也可以用于删除索引。具体使用方法是将 ALTER TABLE 语句的语法中部分指定为以下子句中的某一项。</p><ul><li>DROP PRIMARY KEY：表示删除表中的主键。一个表只有一个主键，主键也是一个索引。</li><li>DROP INDEX index_name：表示删除名称为 index_name 的索引。</li><li>DROP FOREIGN KEY fk_symbol：表示删除外键。</li></ul><h2 id=\"删除索引\"><a class=\"markdownIt-Anchor\" href=\"#删除索引\"></a> 删除索引</h2><p>实例：删除表tb_stu_info中的索引</p><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; DROP INDEX height</span><br><span class=\"line\">    -&gt; on tb_stu_info;</span><br><span class=\"line\">Query OK, 0 rows affected (0.20 sec)</span><br><span class=\"line\">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; show create table tb_stu_info\\G</span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">       Table: tb_stu_info</span><br><span class=\"line\"><span class=\"keyword\">Create</span> <span class=\"keyword\">Table</span>: <span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`tb_stu_info`</span> (</span><br><span class=\"line\">  <span class=\"string\">`id`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`nam`</span> <span class=\"built_in\">char</span>(<span class=\"number\">45</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dept_id`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`age`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`height`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span></span><br><span class=\"line\">) <span class=\"keyword\">ENGINE</span>=<span class=\"keyword\">InnoDB</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CHARSET</span>=utf8</span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"keyword\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->","more":"<!-- build time:Fri Apr 24 2020 15:58:16 GMT+0800 (GMT+08:00) --><h1 id=\"索引简介\"><a class=\"markdownIt-Anchor\" href=\"#索引简介\"></a> 索引简介</h1><p>索引是 MySQL 中一种十分重要的数据库对象。它是数据库性能调优技术的基础，常用于实现数据的快速检索。索引就是根据表中的一列或若干列按照一定顺序建立的列值与记录行之间的对应关系表，实质上是一张描述索引列的列值与原表中记录行之间一一对应关系的有序表。</p><p><strong>1.顺序访问</strong></p><p>顺序访问是在表中实行全表扫描，从头到尾逐行遍历，直到在无序的行数据中找到符合条件的目标数据。这种方式实现比较简单，但是当表中有大量数据的时候，效率非常低下。例如，在几千万条数据中查找少量的数据时，使用顺序访问方式将会遍历所有的数据，花费大量的时间，显然会影响数据库的处理性能。</p><p><strong>2.索引访问</strong></p><p>索引访问是通过遍历索引来直接访问表中记录行的方式。使用这种方式的前提是对表建立一个索引，在列上创建了索引之后，查找数据时可以直接根据该列上的索引找到对应记录行的位置，从而快捷地查找到数据。索引存储了指定列数据值的指针，根据指定的排序顺序对这些指针排序。</p><h2 id=\"索引的分类\"><a class=\"markdownIt-Anchor\" href=\"#索引的分类\"></a> 索引的分类</h2><p>索引的类型和存储引擎有关，每种存储引擎所支持的索引类型不一定完全相同。根据存储方式的不同，MySQL中常用的索引在物理上分为以下两类。</p><p><strong>B-树索引</strong></p><p>B-树索引又称为 BTREE 索引，目前大部分的索引都是采用 B-树索引来存储的。B-树索引是一个典型的数据结构，其包含的组件主要有以下几个：</p><ul><li>叶子节点：包含的条目直接指向表里的数据行。叶子节点之间彼此相连，一个叶子节点有一个指向下一个叶子节点的指针。</li><li>分支节点：包含的条目指向索引里其他的分支节点或者叶子节点。</li><li>根节点：一个 B-树索引只有一个根节点，实际上就是位于树的最顶端的分支节点。</li></ul><p>表中的每一行都会在索引上有一个对应值。因此，在表中进行数据查询时，可以根据索引值一步一步定位到数据所在的行。B-树索引可以进行全键值、键值范围和键值前缀查询，也可以对查询结果进行 ORDER BY排序。但B-树索引必须遵循左边前缀原则，要考虑以下几点约束：</p><ul><li>查询必须从索引的最左边的列开始。</li><li>查询不能跳过某一索引列，必须按照从左到右的顺序进行匹配。</li><li>存储引擎不能使用索引中范围条件右边的列。</li></ul><p><strong>哈希索引</strong></p><p>哈希通过散列算法变换成固定长度的输出，该输出就是散列值。哈希索引也称为散列索引或 HASH 索引。MySQL目前仅有MEMORY存储引擎和HEAP存储引擎支持这类索引。其中，MEMORY存储引擎可以支持B-树索引和HASH索引，且将HASH当成默认索引。</p><p>HASH 索引不是基于树形的数据结构查找数据，而是根据索引列对应的哈希值的方法获取表的记录行。哈希索引的最大特点是访问速度快，但也存在下面的一些缺点：</p><ul><li>需要读取表中索引列的值来参与散列计算，散列计算是一个比较耗时的操作。也就是说，相对于 B- 树索引来说，建立哈希索引会耗费更多的时间。</li><li>不能使用HASH索引排序</li><li>HASH 索引只支持等值比较，如“=”“IN()”或“&lt;=&gt;”</li><li>HASH索引不支持键的部分匹配，因为在计算HASH值的时候是通过整个索引值来计算的</li></ul><p>MySQL中的索引在逻辑上分为以下5 类：</p><ul><li><strong>普通索引</strong>：普通索引是最基本的索引类型，唯一任务是加快对数据的访问速度，没有任何限制。创建普通索引时，通常使用的关键字是INDEX或 KEY。</li><li><strong>唯一性索引</strong>：唯一性索引是不允许索引列具有相同索引值的索引。如果能确定某个数据列只包含彼此各不相同的值，在为这个数据列创建索引的时候就应该用关键字 UNIQUE 把它定义为一个唯一性索引。<font color=\"red\">创建唯一性索引的目的往往不是为了提高访问速度，而是为了避免数据出现重复。</font></li><li><strong>主键索引</strong>：主键索引是一种唯一性索引，即不允许值重复或者值为空，并且每个表只能有一个主键。主键可以在创建表的时候指定，也可以通过修改表的方式添加，必须指定关键字 PRIMARY KEY。<font color=\"red\">每个表只能有一个主键</font></li><li><strong>空间索引</strong>：空间索引主要用于地理空间数据类型 GEOMETRY。</li><li><strong>全文索引</strong>：全文索引只能在 VARCHAR 或 TEXT 类型的列上创建，并且只能在 MyISAM 表中创建。索引在逻辑上分为以上 5 类，但在实际使用中，索引通常被创建成单列索引和组合索引。单列索引就是索引只包含原表的一个列；组合索引也称为复合索引或多列索引，相对于单列索引来说，组合索引是将原表的多个列共同组成一个索引。</li></ul><p>为了提高索引的应用性能，MySQL中的索引可以根据具体应用采用不同的索引策略。这些索引策略所对应的索引类型有聚集索引、次要索引、覆盖索引、复合索引、前缀索引、唯一索引等</p><h2 id=\"索引的使用原则和注意事项\"><a class=\"markdownIt-Anchor\" href=\"#索引的使用原则和注意事项\"></a> 索引的使用原则和注意事项</h2><p>虽然索引可以加快查询速度，提高 MySQL 的处理性能，但是过多地使用索引也会造成以下弊端：</p><ul><li>创建索引和维护索引要耗费时间，这种时间随着数据量的增加而增加。</li><li>除了数据表占数据空间之外，每一个索引还要占一定的物理空间。如果要建立聚簇索引，那么需要的空间就会更大。</li><li>当对表中的数据进行增加、删除和修改的时候，索引也要动态地维护，这样就降低了数据的维护速度。</li></ul><blockquote><p><font color=\"red\">索引可以在一些情况下加速查询，但是在某些情况下，会降低效率。</font></p></blockquote><p>索引只是提高效率的一个因素，因此在建立索引的时候应该遵循以下原则：</p><ul><li>在经常需要搜索的列上建立索引，可以加快搜索的速度。</li><li>在作为主键的列上创建索引，强制该列的唯一性，并组织表中数据的排列结构。</li><li>在经常使用表连接的列上创建索引，这些列主要是一些外键，可以加快表连接的速度。</li><li>在经常需要根据范围进行搜索的列上创建索引，因为索引已经排序，所以其指定的范围是连续的。</li><li>在经常需要排序的列上创建索引，因为索引已经排序，所以查询时可以利用索引的排序，加快排序查询</li><li>在经常使用WHERE子句的列上创建索引，加快条件的判断速度。</li></ul><p>在某些应用场合下建立索引不能提高 MySQL的工作效率，甚至降低了数据库的工作效率，一般来说不适合创建索引的环境如下：</p><ul><li>对于那些在查询中很少使用或参考的列不应该创建索引。因为这些列很少使用到，所以有索引或者无索引并不能提高查询速度。相反，由于增加了索引，反而降低了系统的维护速度，并增大了空间要求。</li><li>对于那些只有很少数据值的列也不应该创建索引。因为这些列的取值很少，例如人事表的性别列。查询结果集的数据行占了表中数据行的很大比例，增加索引并不能明显加快检索速度。</li><li>对于那些定义为 TEXT、IMAGE 和 BIT 数据类型的列不应该创建索引。因为这些列的数据量要么相当大，要么取值很少。</li><li>当修改性能远远大于检索性能时，不应该创建索引。因为修改性能和检索性能是互相矛盾的。当创建索引时，会提高检索性能，降低修改性能。当减少索引时，会提高修改性能，降低检索性能。因此，当修改性能远远大于检索性能时，不应该创建索引。</li></ul><h1 id=\"创建索引create-index\"><a class=\"markdownIt-Anchor\" href=\"#创建索引create-index\"></a> 创建索引(CREATE INDEX)</h1><p>索引的建立对于数据库的高效运行是很重要的，索引可以大大提升SQL的检索速度。</p><h2 id=\"基本语法\"><a class=\"markdownIt-Anchor\" href=\"#基本语法\"></a> 基本语法</h2><p>MySQL提供三种创建索引的方法：</p><p><strong>1.使用CREATE INDEX语句</strong></p><p>使用专门用于创建索引的 CREATE INDEX 语句在一个已有的表上创建索引，但该语句不能创建主键。</p><blockquote><p>语法格式：CREATE &lt;索引名&gt; ON &lt;表名&gt; (&lt;列名&gt; [&lt;长度&gt;] [ ASC | DESC])</p></blockquote><p>语法说明：</p><ul><li>&lt;索引名&gt;：指定索引名。一个表可以创建多个索引，但每个索引在该表中的名称是唯一的.</li><li>&lt;表名&gt;：指定要创建索引的表名。</li><li>&lt;列名&gt;：指定要创建索引的列名。通常可以考虑将查询语句中在 JOIN 子句和 WHERE 子句里经常出现的列作为索引列。</li><li>&lt;列名&gt;：指定要创建索引的列名。通常可以考虑将查询语句中在 JOIN 子句和 WHERE 子句里经常出现的列作为索引列。</li><li>ASC|DESC：可选项。ASC指定索引按照升序来排列，DESC指定索引按照降序来排列，默认为ASC.</li></ul><p><strong>2.使用CREATE TABLE语句</strong></p><p>索引也可以在创建表（CREATE TABLE）的同时创建。在 CREATE TABLE 语句中添加以下语句。语法格式：</p><blockquote><p>CONSTRAINT PRIMARY KEY [索引类型] (&lt;列名&gt;,…)</p></blockquote><p>在CREATE TABLE 语句中添加此语句，表示在创建新表的同时创建该表的主键。</p><blockquote><p>语法格式1：KEY | INDEX [&lt;索引名&gt;] [&lt;索引类型&gt;] (&lt;列名&gt;,…)</p></blockquote><p>在 CREATE TABLE 语句中添加此语句，表示在创建新表的同时创建该表的索引。</p><blockquote><p>语法格式2：UNIQUE [ INDEX | KEY] [&lt;索引名&gt;] [&lt;索引类型&gt;] (&lt;列名&gt;,…)</p></blockquote><p>在 CREATE TABLE 语句中添加此语句，表示在创建新表的同时创建该表的唯一性索引。</p><blockquote><p>语法格式3：FOREIGN KEY &lt;索引名&gt; &lt;列名&gt;</p></blockquote><p>在 CREATE TABLE 语句中添加此语句，表示在创建新表的同时创建该表的外键。</p><p><strong>3.使用ALTER TABLE语句</strong></p><p>CREATE INDEX 语句可以在一个已有的表上创建索引，ALTER TABLE 语句也可以在一个已有的表上创建索引。在使用 ALTER TABLE 语句修改表的同时，可以向已有的表添加索引。具体的做法是在 ALTER TABLE 语句中添加以下语法成分的某一项或几项。</p><blockquote><p>语法格式1：ADD INDEX [&lt;索引名&gt;] [&lt;索引类型&gt;] (&lt;列名&gt;,…)</p></blockquote><p>在 ALTER TABLE 语句中添加此语法成分，表示在修改表的同时为该表添加索引。</p><blockquote><p>语法格式2：ADD PRIMARY KEY [&lt;索引类型&gt;] (&lt;列名&gt;,…)</p></blockquote><p>在 ALTER TABLE 语句中添加此语法成分，表示在修改表的同时为该表添加主键。</p><blockquote><p>语法格式3：ADD UNIQUE [ INDEX | KEY] [&lt;索引名&gt;] [&lt;索引类型&gt;] (&lt;列名&gt;,…)</p></blockquote><p>在 ALTER TABLE 语句中添加此语法成分，表示在修改表的同时为该表添加唯一性索引。</p><blockquote><p>语法格式4：ADD FOREIGN KEY [&lt;索引名&gt;] (&lt;列名&gt;,…)</p></blockquote><p>在 ALTER TABLE 语句中添加此语法成分，表示在修改表的同时为该表添加外键</p><h2 id=\"创建一般索引\"><a class=\"markdownIt-Anchor\" href=\"#创建一般索引\"></a> 创建一般索引</h2><p>实例1：创建一个表 tb_stu_info，在该表的 height 字段创建一般索引。输入的 SQL 语句和执行过程如下所示。</p><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; create table tb_stu_info</span><br><span class=\"line\">    -&gt; (</span><br><span class=\"line\">    -&gt; id INT NOT NULL,</span><br><span class=\"line\">    -&gt; nam CHAR(45) DEFAULT NULL,</span><br><span class=\"line\">    -&gt; dept_id INT DEFAULT NULL\\</span><br><span class=\"line\">    -&gt; ,age INT DEFAULT NULL,</span><br><span class=\"line\">    -&gt; height INT DEFAULT NULL,</span><br><span class=\"line\">    -&gt; INDEX(height)</span><br><span class=\"line\">    -&gt; );</span><br><span class=\"line\">Query OK, 0 rows affected (0.30 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; show create table tb_stu_info\\G</span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">       Table: tb_stu_info</span><br><span class=\"line\"><span class=\"keyword\">Create</span> <span class=\"keyword\">Table</span>: <span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`tb_stu_info`</span> (</span><br><span class=\"line\">  <span class=\"string\">`id`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`nam`</span> <span class=\"built_in\">char</span>(<span class=\"number\">45</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dept_id`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`age`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`height`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"keyword\">KEY</span> <span class=\"string\">`height`</span> (<span class=\"string\">`height`</span>)</span><br><span class=\"line\">) <span class=\"keyword\">ENGINE</span>=<span class=\"keyword\">InnoDB</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CHARSET</span>=utf8</span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"keyword\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id=\"创建唯一索引\"><a class=\"markdownIt-Anchor\" href=\"#创建唯一索引\"></a> 创建唯一索引</h2><p>实例2：创建一个表 tb_stu_info2，在该表的 id 字段上使用 UNIQUE 关键字创建唯一索引。</p><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CREATE TABLE tb_stu_info2</span><br><span class=\"line\">    -&gt; (</span><br><span class=\"line\">    -&gt; id INT NOT NULL,</span><br><span class=\"line\">    -&gt; name CHAR(45) DEFAULT NULL,</span><br><span class=\"line\">    -&gt; dept_id INT DEFAULT NULL,</span><br><span class=\"line\">    -&gt; age INT DEFAULT NULL,</span><br><span class=\"line\">    -&gt; height INT DEFAULT NULL,</span><br><span class=\"line\">    -&gt; UNIQUE INDEX(height)</span><br><span class=\"line\">    -&gt; );</span><br><span class=\"line\">Query OK, 0 rows affected (0.29 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; SHOW CREATE TABLE tb_stu_info2\\G</span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">       Table: tb_stu_info2</span><br><span class=\"line\"><span class=\"keyword\">Create</span> <span class=\"keyword\">Table</span>: <span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`tb_stu_info2`</span> (</span><br><span class=\"line\">  <span class=\"string\">`id`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`name`</span> <span class=\"built_in\">char</span>(<span class=\"number\">45</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dept_id`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`age`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`height`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"keyword\">UNIQUE</span> <span class=\"keyword\">KEY</span> <span class=\"string\">`height`</span> (<span class=\"string\">`height`</span>)</span><br><span class=\"line\">) <span class=\"keyword\">ENGINE</span>=<span class=\"keyword\">InnoDB</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CHARSET</span>=utf8</span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"keyword\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id=\"查看索引\"><a class=\"markdownIt-Anchor\" href=\"#查看索引\"></a> 查看索引</h2><p>查看已创建的索引的情况，可以使用 SHOW INDEX 语句查看表中创建的索引。</p><blockquote><p>语法格式：SHOW INDEX FROM &lt;表名&gt; [ FROM &lt;数据库名&gt;]</p></blockquote><p>语法说明：</p><ul><li>&lt;表名&gt;：要显示索引的表。</li><li>&lt;数据库名&gt;：要显示的表所在的数据库。</li></ul><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SHOW INDEX FROM course FROM mytest;</span><br><span class=\"line\"><span class=\"comment\"># 显示数据库mytest的表course的索引情况</span></span><br></pre></td></tr></table></figure><p>显示字段说明如下：</p><ul><li>Table：表的名称。</li><li>Non_unique：用于显示该索引是否是唯一索引。若不是唯一索引，则该列的值显示为 1；若是唯一索引，则该列的值显示为 0。</li><li>Key_name：索引的名称。</li><li>Seq_in_index：索引中的列序列号，从 1 开始计数。</li><li>Column_name：列名称。</li><li>Collation：显示列以何种顺序存储在索引中。在 MySQL 中，升序显示值“A”（升序），若显示为 NULL，则表示无分类。</li><li>Cardinality：显示索引中唯一值数目的估计值。基数根据被存储为整数的统计数据计数，所以即使对于小型表，该值也没有必要是精确的。基数越大，当进行联合时，MySQL 使用该索引的机会就越大。</li><li>Sub_part：若列只是被部分编入索引，则为被编入索引的字符的数目。若整列被编入索引，则为 NULL。</li><li>Packed：指示关键字如何被压缩。若没有被压缩，则为 NULL。<br>Null：用于显示索引列中是否包含 NULL。若列含有 NULL，则显示为 YES。若没有，则该列显示为 NO。</li><li>Index_type：显示索引使用的类型和方法（BTREE、FULLTEXT、HASH、RTREE）。<br>Comment：显示评注。</li></ul><p>实例：使用 SHOW INDEX 语句查看表 tb_stu_info2 的索引信息</p><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SHOW INDEX FROM tb_stu_info2\\G</span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">        Table: tb_stu_info2</span><br><span class=\"line\">   Non_unique: 0</span><br><span class=\"line\">     Key_name: height</span><br><span class=\"line\"> Seq_in_index: 1</span><br><span class=\"line\">  Column_name: height</span><br><span class=\"line\">    Collation: A</span><br><span class=\"line\">  Cardinality: 0</span><br><span class=\"line\">     Sub_part: NULL</span><br><span class=\"line\">       Packed: NULL</span><br><span class=\"line\">         Null: YES</span><br><span class=\"line\">   Index_type: BTREE</span><br><span class=\"line\">      <span class=\"keyword\">Comment</span>: </span><br><span class=\"line\">Index_comment: </span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"keyword\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id=\"修改和删除索引drop-index\"><a class=\"markdownIt-Anchor\" href=\"#修改和删除索引drop-index\"></a> 修改和删除索引(DROP INDEX)</h1><p>当不再需要索引时，可以使用 DROP INDEX 语句或 ALTER TABLE 语句来对索引进行删除。<br><strong>1.使用DROP INDEX语句</strong></p><blockquote><p>语法格式：DROP INDEX &lt;索引名&gt; ON &lt;表名&gt;</p></blockquote><p>语法说明：</p><ul><li>&lt;索引名&gt;：要删除的索引名</li><li>&lt;表名&gt;：指定该索引所在的表名</li></ul><p><strong>2.使用ALTER TABLE语句</strong><br>根据 ALTER TABLE 语句的语法可知，该语句也可以用于删除索引。具体使用方法是将 ALTER TABLE 语句的语法中部分指定为以下子句中的某一项。</p><ul><li>DROP PRIMARY KEY：表示删除表中的主键。一个表只有一个主键，主键也是一个索引。</li><li>DROP INDEX index_name：表示删除名称为 index_name 的索引。</li><li>DROP FOREIGN KEY fk_symbol：表示删除外键。</li></ul><h2 id=\"删除索引\"><a class=\"markdownIt-Anchor\" href=\"#删除索引\"></a> 删除索引</h2><p>实例：删除表tb_stu_info中的索引</p><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; DROP INDEX height</span><br><span class=\"line\">    -&gt; on tb_stu_info;</span><br><span class=\"line\">Query OK, 0 rows affected (0.20 sec)</span><br><span class=\"line\">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; show create table tb_stu_info\\G</span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">       Table: tb_stu_info</span><br><span class=\"line\"><span class=\"keyword\">Create</span> <span class=\"keyword\">Table</span>: <span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`tb_stu_info`</span> (</span><br><span class=\"line\">  <span class=\"string\">`id`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`nam`</span> <span class=\"built_in\">char</span>(<span class=\"number\">45</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`dept_id`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`age`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`height`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span></span><br><span class=\"line\">) <span class=\"keyword\">ENGINE</span>=<span class=\"keyword\">InnoDB</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CHARSET</span>=utf8</span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"keyword\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->","categories":[{"name":"计算机基础","path":"api/categories/计算机基础.json"},{"name":"数据库","path":"api/categories/数据库.json"}],"tags":[{"name":"SQL","path":"api/tags/SQL.json"},{"name":"数据库","path":"api/tags/数据库.json"}]}