{"title":"SQL-函数","slug":"sql-函数","date":"2020-04-21T13:03:54.000Z","updated":"2020-04-21T13:53:18.427Z","comments":true,"path":"api/articles/sql-函数.json","excerpt":null,"covers":null,"content":"<!-- build time:Fri Apr 24 2020 15:58:16 GMT+0800 (GMT+08:00) --><h1 id=\"内建函数\"><a class=\"markdownIt-Anchor\" href=\"#内建函数\"></a> 内建函数</h1><h2 id=\"aggregate函数\"><a class=\"markdownIt-Anchor\" href=\"#aggregate函数\"></a> Aggregate函数</h2><p>SQL Aggregate 函数计算从列中取得的值，返回一个单一的值。</p><p>有用的 Aggregate 函数：</p><h3 id=\"avg函数\"><a class=\"markdownIt-Anchor\" href=\"#avg函数\"></a> AVG()函数</h3><p>用于返回数值列的平均值</p><blockquote><p>语法格式：SELECT AVG(column_name) FROM table_name</p></blockquote><h3 id=\"count函数\"><a class=\"markdownIt-Anchor\" href=\"#count函数\"></a> COUNT()函数</h3><p>COUNT() 函数返回匹配指定条件的行数。</p><h4 id=\"sql-countcolumn_name-语法\"><a class=\"markdownIt-Anchor\" href=\"#sql-countcolumn_name-语法\"></a> SQL COUNT(column_name) 语法</h4><p>COUNT(column_name) 函数返回指定列的值的数目（NULL 不计入）：</p><blockquote><p>SELECT COUNT(column_name) FROM table_name;</p></blockquote><h4 id=\"sql-count-语法\"><a class=\"markdownIt-Anchor\" href=\"#sql-count-语法\"></a> SQL COUNT(*) 语法</h4><p>COUNT(*) 函数返回表中的记录数：</p><blockquote><p>SELECT COUNT(*) FROM table_name;</p></blockquote><h4 id=\"sql-countdistinct-column_name-语法\"><a class=\"markdownIt-Anchor\" href=\"#sql-countdistinct-column_name-语法\"></a> SQL COUNT(DISTINCT column_name) 语法</h4><p>COUNT(DISTINCT column_name) 函数返回指定列的不同值的数目：</p><blockquote><p>SELECT COUNT(DISTINCT column_name) FROM table_name;</p></blockquote><h3 id=\"max函数\"><a class=\"markdownIt-Anchor\" href=\"#max函数\"></a> MAX()函数</h3><p>MAX()函数返回指定列的最大值。</p><blockquote><p>SQL MAX() 语法<br>SELECT MAX(column_name) FROM table_name;</p></blockquote><h3 id=\"min函数\"><a class=\"markdownIt-Anchor\" href=\"#min函数\"></a> MIN()函数</h3><p>MIN() 函数返回指定列的最小值。</p><blockquote><p>SELECT MIN(column_name) FROM table_name;</p></blockquote><h3 id=\"sum函数\"><a class=\"markdownIt-Anchor\" href=\"#sum函数\"></a> SUM()函数</h3><p>SUM() 函数返回数值列的总数。</p><blockquote><p>SELECT SUM(column_name) FROM table_name;</p></blockquote><h2 id=\"scalar函数\"><a class=\"markdownIt-Anchor\" href=\"#scalar函数\"></a> Scalar函数</h2><p>SQL Scalar 函数基于输入值，返回一个单一的值。</p><h3 id=\"ucase-函数\"><a class=\"markdownIt-Anchor\" href=\"#ucase-函数\"></a> UCASE() 函数</h3><p>UCASE() 函数把字段的值转换为大写。</p><blockquote><p>SELECT UCASE(column_name) FROM table_name;</p></blockquote><h3 id=\"lcase-函数\"><a class=\"markdownIt-Anchor\" href=\"#lcase-函数\"></a> LCASE() 函数</h3><p>LCASE()函数把字段的值转换为小写。</p><blockquote><p>SELECT LCASE(column_name) FROM table_name;</p></blockquote><h3 id=\"mid-函数\"><a class=\"markdownIt-Anchor\" href=\"#mid-函数\"></a> MID() 函数</h3><p>MID()函数用于从文本字段中提取字符。</p><blockquote><p>SELECT MID(column_name,start[,length]) FROM table_name;</p></blockquote><h3 id=\"length-函数\"><a class=\"markdownIt-Anchor\" href=\"#length-函数\"></a> LENGTH() 函数</h3><p>LENGTH() 函数返回文本字段中值的长度。</p><blockquote><p>SELECT LENGTH(column_name) FROM table_name;</p></blockquote><h3 id=\"round函数\"><a class=\"markdownIt-Anchor\" href=\"#round函数\"></a> ROUND()函数</h3><p>ROUND() 函数用于把数值字段舍入为指定的小数位数。</p><blockquote><p>SELECT ROUND(column_name,decimals) FROM table_name;</p></blockquote><h3 id=\"now函数\"><a class=\"markdownIt-Anchor\" href=\"#now函数\"></a> NOW()函数</h3><p>NOW() 函数返回当前系统的日期和时间。</p><blockquote><p>SELECT NOW() FROM table_name;</p></blockquote><h3 id=\"format函数\"><a class=\"markdownIt-Anchor\" href=\"#format函数\"></a> FORMAT()函数</h3><p>FORMAT() 函数用于对字段的显示进行格式化。</p><blockquote><p>SELECT FORMAT(column_name,format) FROM table_name;</p></blockquote><h1 id=\"自定义函数\"><a class=\"markdownIt-Anchor\" href=\"#自定义函数\"></a> 自定义函数</h1><p>自定义函数是一种与存储过程十分相似的过程式数据库对象。它与存储过程一样，都是由SQL语句和过程式语句组成的代码片段，并且可以被应用程序和其他SQL语句调用。</p><p>自定义函数与存储过程之间存在几点区别：</p><ul><li>自定义函数不能拥有输出参数，这是因为自定义函数自身就是输出参数；而存储过程可以拥有输出参数。</li><li>自定义函数中必须包含一条RETURN语句，而这条特殊的SQL语句不允许包含于存储过程中。</li><li>可以直接对自定义函数进行调用而不需要使用CALL语句，而对存储过程的调用需要使用CALL语句。</li></ul><h2 id=\"创建并使用自定义函数\"><a class=\"markdownIt-Anchor\" href=\"#创建并使用自定义函数\"></a> 创建并使用自定义函数</h2><p>使用 CREATE FUNCTION 语句创建自定义函数，语法格式如下：</p><blockquote><p>CREATE FUNCTION &lt;函数名&gt; ( [ &lt;参数1&gt; &lt;类型1&gt; [ , &lt;参数2&gt; &lt;类型2&gt;] ] … )<br>RETURNS &lt;类型&gt;<br>&lt;函数主体&gt;</p></blockquote><p>语法说明如下：</p><ul><li>&lt;函数名&gt;：指定自定义函数的名称。注意，自定义函数不能与存储过程具有相同的名称。</li><li>&lt;参数&gt;&lt;类型&gt;：用于指定自定义函数的参数。这里的参数只有名称和类型，不能指定关键字 IN、OUT 和 INOUT。</li><li>RETURNS&lt;类型&gt;：用于声明自定义函数返回值的数据类型。其中，&lt;类型&gt;用于指定返回值的数据类型。</li><li>&lt;函数主体&gt;：自定义函数的主体部分，也称函数体。所有在存储过程中使用的 SQL 语句在自定义函数中同样适用，包括前面所介绍的局部变量、SET 语句、流程控制语句、游标等。除此之外，自定义函数体还必须包含一个 RETURN&lt;值&gt; 语句，其中&lt;值&gt;用于指定自定义函数的返回值。</li></ul><p><font color=\"red\">若要查看数据库中存在哪些自定义函数，可以使用 SHOW FUNCTION STATUS 语句；若要查看数据库中某个具体的自定义函数，可以使用 SHOW CREATE FUNCTION&lt;函数名&gt; 语句，其中&lt;函数名&gt;用于指定该自定义函数的名称</font></p><p>注意：当使用 DELIMITER 命令时，应该避免使用反斜杠“\\”字符，因为反斜杠是 MySQL 的转义字符。<br></p><p>函数调用的语法格式如下：</p><blockquote><p>SELECT &lt;自定义函数名&gt; ([&lt;参数&gt; [,…]])</p></blockquote><p>实例1：创建存储函数，名称为 StuNameById，该函数返回 SELECT 语句的查询结果，数值类型为字符串类型</p><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CREATE FUNCTION StuNameById()</span><br><span class=\"line\">    -&gt; RETURNS VARCHAR(45)</span><br><span class=\"line\">    -&gt; RETURN</span><br><span class=\"line\">    -&gt; (SELECT name FROM tb_students_info WHERE id=1);</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"><span class=\"comment\"># 调佣自定义函数</span></span><br><span class=\"line\">mysql&gt; SELECT StuNameById();</span><br><span class=\"line\">+<span class=\"comment\">---------------+</span></span><br><span class=\"line\">| StuNameById() |</span><br><span class=\"line\">+<span class=\"comment\">---------------+</span></span><br><span class=\"line\">| peng          |</span><br><span class=\"line\">+<span class=\"comment\">---------------+</span></span><br><span class=\"line\">1 row in <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id=\"修改自定义函数\"><a class=\"markdownIt-Anchor\" href=\"#修改自定义函数\"></a> 修改自定义函数</h2><p>可以使用 ALTER FUNCTION 语句来修改自定义函数的某些相关特征。若要修改自定义函数的内容，则需要先删除该自定义函数，然后重新创建。</p><h2 id=\"删除自定义函数\"><a class=\"markdownIt-Anchor\" href=\"#删除自定义函数\"></a> 删除自定义函数</h2><blockquote><p>语法格式：DROP FUNCTION [ IF EXISTS ] &lt;自定义函数名&gt;</p></blockquote><p>语法说明：</p><ul><li>&lt;自定义函数名&gt;：指定要删除的自定义函数的名称。</li><li>IF EXISTS：指定关键字，用于防止因误删除不存在的自定义函数而引发错误。</li></ul><!-- rebuild by neat -->","more":"<!-- build time:Fri Apr 24 2020 15:58:16 GMT+0800 (GMT+08:00) --><h1 id=\"内建函数\"><a class=\"markdownIt-Anchor\" href=\"#内建函数\"></a> 内建函数</h1><h2 id=\"aggregate函数\"><a class=\"markdownIt-Anchor\" href=\"#aggregate函数\"></a> Aggregate函数</h2><p>SQL Aggregate 函数计算从列中取得的值，返回一个单一的值。</p><p>有用的 Aggregate 函数：</p><h3 id=\"avg函数\"><a class=\"markdownIt-Anchor\" href=\"#avg函数\"></a> AVG()函数</h3><p>用于返回数值列的平均值</p><blockquote><p>语法格式：SELECT AVG(column_name) FROM table_name</p></blockquote><h3 id=\"count函数\"><a class=\"markdownIt-Anchor\" href=\"#count函数\"></a> COUNT()函数</h3><p>COUNT() 函数返回匹配指定条件的行数。</p><h4 id=\"sql-countcolumn_name-语法\"><a class=\"markdownIt-Anchor\" href=\"#sql-countcolumn_name-语法\"></a> SQL COUNT(column_name) 语法</h4><p>COUNT(column_name) 函数返回指定列的值的数目（NULL 不计入）：</p><blockquote><p>SELECT COUNT(column_name) FROM table_name;</p></blockquote><h4 id=\"sql-count-语法\"><a class=\"markdownIt-Anchor\" href=\"#sql-count-语法\"></a> SQL COUNT(*) 语法</h4><p>COUNT(*) 函数返回表中的记录数：</p><blockquote><p>SELECT COUNT(*) FROM table_name;</p></blockquote><h4 id=\"sql-countdistinct-column_name-语法\"><a class=\"markdownIt-Anchor\" href=\"#sql-countdistinct-column_name-语法\"></a> SQL COUNT(DISTINCT column_name) 语法</h4><p>COUNT(DISTINCT column_name) 函数返回指定列的不同值的数目：</p><blockquote><p>SELECT COUNT(DISTINCT column_name) FROM table_name;</p></blockquote><h3 id=\"max函数\"><a class=\"markdownIt-Anchor\" href=\"#max函数\"></a> MAX()函数</h3><p>MAX()函数返回指定列的最大值。</p><blockquote><p>SQL MAX() 语法<br>SELECT MAX(column_name) FROM table_name;</p></blockquote><h3 id=\"min函数\"><a class=\"markdownIt-Anchor\" href=\"#min函数\"></a> MIN()函数</h3><p>MIN() 函数返回指定列的最小值。</p><blockquote><p>SELECT MIN(column_name) FROM table_name;</p></blockquote><h3 id=\"sum函数\"><a class=\"markdownIt-Anchor\" href=\"#sum函数\"></a> SUM()函数</h3><p>SUM() 函数返回数值列的总数。</p><blockquote><p>SELECT SUM(column_name) FROM table_name;</p></blockquote><h2 id=\"scalar函数\"><a class=\"markdownIt-Anchor\" href=\"#scalar函数\"></a> Scalar函数</h2><p>SQL Scalar 函数基于输入值，返回一个单一的值。</p><h3 id=\"ucase-函数\"><a class=\"markdownIt-Anchor\" href=\"#ucase-函数\"></a> UCASE() 函数</h3><p>UCASE() 函数把字段的值转换为大写。</p><blockquote><p>SELECT UCASE(column_name) FROM table_name;</p></blockquote><h3 id=\"lcase-函数\"><a class=\"markdownIt-Anchor\" href=\"#lcase-函数\"></a> LCASE() 函数</h3><p>LCASE()函数把字段的值转换为小写。</p><blockquote><p>SELECT LCASE(column_name) FROM table_name;</p></blockquote><h3 id=\"mid-函数\"><a class=\"markdownIt-Anchor\" href=\"#mid-函数\"></a> MID() 函数</h3><p>MID()函数用于从文本字段中提取字符。</p><blockquote><p>SELECT MID(column_name,start[,length]) FROM table_name;</p></blockquote><h3 id=\"length-函数\"><a class=\"markdownIt-Anchor\" href=\"#length-函数\"></a> LENGTH() 函数</h3><p>LENGTH() 函数返回文本字段中值的长度。</p><blockquote><p>SELECT LENGTH(column_name) FROM table_name;</p></blockquote><h3 id=\"round函数\"><a class=\"markdownIt-Anchor\" href=\"#round函数\"></a> ROUND()函数</h3><p>ROUND() 函数用于把数值字段舍入为指定的小数位数。</p><blockquote><p>SELECT ROUND(column_name,decimals) FROM table_name;</p></blockquote><h3 id=\"now函数\"><a class=\"markdownIt-Anchor\" href=\"#now函数\"></a> NOW()函数</h3><p>NOW() 函数返回当前系统的日期和时间。</p><blockquote><p>SELECT NOW() FROM table_name;</p></blockquote><h3 id=\"format函数\"><a class=\"markdownIt-Anchor\" href=\"#format函数\"></a> FORMAT()函数</h3><p>FORMAT() 函数用于对字段的显示进行格式化。</p><blockquote><p>SELECT FORMAT(column_name,format) FROM table_name;</p></blockquote><h1 id=\"自定义函数\"><a class=\"markdownIt-Anchor\" href=\"#自定义函数\"></a> 自定义函数</h1><p>自定义函数是一种与存储过程十分相似的过程式数据库对象。它与存储过程一样，都是由SQL语句和过程式语句组成的代码片段，并且可以被应用程序和其他SQL语句调用。</p><p>自定义函数与存储过程之间存在几点区别：</p><ul><li>自定义函数不能拥有输出参数，这是因为自定义函数自身就是输出参数；而存储过程可以拥有输出参数。</li><li>自定义函数中必须包含一条RETURN语句，而这条特殊的SQL语句不允许包含于存储过程中。</li><li>可以直接对自定义函数进行调用而不需要使用CALL语句，而对存储过程的调用需要使用CALL语句。</li></ul><h2 id=\"创建并使用自定义函数\"><a class=\"markdownIt-Anchor\" href=\"#创建并使用自定义函数\"></a> 创建并使用自定义函数</h2><p>使用 CREATE FUNCTION 语句创建自定义函数，语法格式如下：</p><blockquote><p>CREATE FUNCTION &lt;函数名&gt; ( [ &lt;参数1&gt; &lt;类型1&gt; [ , &lt;参数2&gt; &lt;类型2&gt;] ] … )<br>RETURNS &lt;类型&gt;<br>&lt;函数主体&gt;</p></blockquote><p>语法说明如下：</p><ul><li>&lt;函数名&gt;：指定自定义函数的名称。注意，自定义函数不能与存储过程具有相同的名称。</li><li>&lt;参数&gt;&lt;类型&gt;：用于指定自定义函数的参数。这里的参数只有名称和类型，不能指定关键字 IN、OUT 和 INOUT。</li><li>RETURNS&lt;类型&gt;：用于声明自定义函数返回值的数据类型。其中，&lt;类型&gt;用于指定返回值的数据类型。</li><li>&lt;函数主体&gt;：自定义函数的主体部分，也称函数体。所有在存储过程中使用的 SQL 语句在自定义函数中同样适用，包括前面所介绍的局部变量、SET 语句、流程控制语句、游标等。除此之外，自定义函数体还必须包含一个 RETURN&lt;值&gt; 语句，其中&lt;值&gt;用于指定自定义函数的返回值。</li></ul><p><font color=\"red\">若要查看数据库中存在哪些自定义函数，可以使用 SHOW FUNCTION STATUS 语句；若要查看数据库中某个具体的自定义函数，可以使用 SHOW CREATE FUNCTION&lt;函数名&gt; 语句，其中&lt;函数名&gt;用于指定该自定义函数的名称</font></p><p>注意：当使用 DELIMITER 命令时，应该避免使用反斜杠“\\”字符，因为反斜杠是 MySQL 的转义字符。<br></p><p>函数调用的语法格式如下：</p><blockquote><p>SELECT &lt;自定义函数名&gt; ([&lt;参数&gt; [,…]])</p></blockquote><p>实例1：创建存储函数，名称为 StuNameById，该函数返回 SELECT 语句的查询结果，数值类型为字符串类型</p><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CREATE FUNCTION StuNameById()</span><br><span class=\"line\">    -&gt; RETURNS VARCHAR(45)</span><br><span class=\"line\">    -&gt; RETURN</span><br><span class=\"line\">    -&gt; (SELECT name FROM tb_students_info WHERE id=1);</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"><span class=\"comment\"># 调佣自定义函数</span></span><br><span class=\"line\">mysql&gt; SELECT StuNameById();</span><br><span class=\"line\">+<span class=\"comment\">---------------+</span></span><br><span class=\"line\">| StuNameById() |</span><br><span class=\"line\">+<span class=\"comment\">---------------+</span></span><br><span class=\"line\">| peng          |</span><br><span class=\"line\">+<span class=\"comment\">---------------+</span></span><br><span class=\"line\">1 row in <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id=\"修改自定义函数\"><a class=\"markdownIt-Anchor\" href=\"#修改自定义函数\"></a> 修改自定义函数</h2><p>可以使用 ALTER FUNCTION 语句来修改自定义函数的某些相关特征。若要修改自定义函数的内容，则需要先删除该自定义函数，然后重新创建。</p><h2 id=\"删除自定义函数\"><a class=\"markdownIt-Anchor\" href=\"#删除自定义函数\"></a> 删除自定义函数</h2><blockquote><p>语法格式：DROP FUNCTION [ IF EXISTS ] &lt;自定义函数名&gt;</p></blockquote><p>语法说明：</p><ul><li>&lt;自定义函数名&gt;：指定要删除的自定义函数的名称。</li><li>IF EXISTS：指定关键字，用于防止因误删除不存在的自定义函数而引发错误。</li></ul><!-- rebuild by neat -->","categories":[{"name":"计算机基础","path":"api/categories/计算机基础.json"},{"name":"数据库","path":"api/categories/数据库.json"}],"tags":[{"name":"SQL","path":"api/tags/SQL.json"},{"name":"数据库","path":"api/tags/数据库.json"}]}